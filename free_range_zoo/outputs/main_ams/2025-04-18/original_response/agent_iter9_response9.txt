```python
def single_agent_policy(
    agent_pos: Tuple[float, float], 
    agent_fire_reduction_power: float, 
    agent_suppressant_num: float, 

    other_agents_pos: List[Tuple[float, float]], 

    fire_pos: List[Tuple[float, float]], 
    fire_levels: List[int], 
    fire_intensities: List[float], 

    fire_putout_weight: List[float]
) -> int:

    # === Adjusting Scoring Criteria ===
    max_score = -float('inf')
    best_fire = None

    dist_temperature = 0.1  # Reduced to prioritize closer fire
    suppress_power_temperature = 0.02  # Slightly increased to put more weight on suppressing power.
    fire_level_temperature = 1  # Kept unchanged to maintain importance on fire level.

    for i, (fire_position, fire_level, fire_intensity, fire_weight) in enumerate(zip(fire_pos, fire_levels, fire_intensities, fire_putout_weight)):

        # Distance factor with higher weight
        dist = ((fire_position[0]-agent_pos[0])**2 + (fire_position[1]-agent_pos[1])**2)**0.5 / (agent_suppressant_num+1e-7)

        # Firefighting efficiency factor with lower weight
        suppression_power = agent_fire_reduction_power * agent_suppressant_num / (fire_intensity+1)

        # Score calculation considering prioritization weight, firefighting efficiency, distance factor, and fire level.
        score = np.exp((fire_weight * (fire_level+1e-7) / (dist_temperature * dist + 1) + suppression_power * suppress_power_temperature) / fire_level_temperature)

        if score > max_score:
            max_score = score
            best_fire = i

    return best_fire
```


From the feedback, I observed that average steps are generally high, and the average fire intensity change is not as negative as expected, indicating that the task of suppressing fires could potentially be accomplished more efficiently. Therefore, in this improved policy function, I made the following adjustments:

1. Lowered the `dist_temperature` to increase the weight placed on the proximity/closeness of the fires to the agent.
2. Increased the `suppression_power_temperature` to increase the weight of the firefighting efficiency component of the score calculation. This is done to increase the fire suppressing power of the agent.
3. Kept `fire_level_temperature` unchanged as we want to maintain the same level of importance on the fire level.
   
These adjustments were made to improve the efficiency of the agents and to decrease the overall number of steps taken to suppress the fires. They should help in using the available resources more efficiently.