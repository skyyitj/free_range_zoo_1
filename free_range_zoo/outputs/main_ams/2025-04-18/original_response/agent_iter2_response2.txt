Based on the given feedback, it is observed that the "Average Steps" is quite high. This suggests that the agents are taking a lot of steps to complete the task. Therefore, we should look into optimizing the policy function so that fewer steps are required.
Also, the "Average Fire Intensity Change" at -0.80 indicates that the fire intensity is not being reduced efficiently which might result in the fire spreading out more quickly. The "Suppressant Efficiency" is also less with a value of 0.9610 intensity/suppressant. We should try to enhance these.
In light of the above, a new distance weighting factor should be incorporated while calculating the distance from agent to the fire, which will help reduce the average number of steps and allow the agent to reach the fire quickly and start the firefighting efforts faster.
Simultaneously, to improve the "Average Fire Intensity Change" and "Suppressant Efficiency", a criteria should be added to select fires with high intensity. Here is the improved policy function:

```python
import numpy as np

def single_agent_policy(
    agent_pos: Tuple[float, float], 
    agent_fire_reduction_power: float, 
    agent_suppressant_num: float, 

    other_agents_pos: List[Tuple[float, float]], 

    fire_pos: List[Tuple[float, float]], 
    fire_levels: List[int], 
    fire_intensities: List[float], 

    fire_putout_weight: List[float]
) -> int:
    # === Fire Task Selection Scoring ===
    max_score = float('-inf')
    best_fire = None

    # Assign a higher weighting to distance to reduce steps
    distance_weight = 0.6

    for i, (fire_position, fire_level, fire_intensity, fire_weight) in enumerate(zip(fire_pos, fire_levels, fire_intensities, fire_putout_weight)):
        dist = ((fire_position[0]-agent_pos[0])**2 + (fire_position[1]-agent_pos[1])**2)**0.5 / agent_suppressant_num
        dist *= distance_weight

        # Assign a higher score to fires with high intensities
        fire_score = np.exp(fire_intensity)
        
        suppressant_factor = (agent_fire_reduction_power / fire_intensity) * agent_suppressant_num
        score = fire_weight * suppressant_factor * fire_score - dist * fire_intensity  
        if score > max_score:
            max_score = score
            best_fire = i

    return best_fire
```
In the new policy, an additional weighting has been provided to the distance calculation which will help reduce the average number of steps required to reach the fire. Additionally, an exponential function has been introduced to calculate the fire score, giving higher scores to fires with high intensity. This should improve the efficiency of firefighting, speed up fire intensity reduction, and make better use of the available suppressant.