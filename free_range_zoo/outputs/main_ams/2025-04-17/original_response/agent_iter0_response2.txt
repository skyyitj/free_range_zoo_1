```python
from typing import Tuple, List
import numpy as np

def single_agent_policy(
    # === Agent Properties ===
    agent_pos: Tuple[float, float],              
    agent_fire_reduction_power: float,           
    agent_suppressant_num: float,                

    # === Team Information ===
    other_agents_pos: List[Tuple[float, float]], 

    # === Fire Task Information ===
    fire_pos: List[Tuple[float, float]],         
    fire_levels: List[int],                    
    fire_intensities: List[float],               

    # === Task Prioritization ===
    fire_putout_weight: List[float],             
) -> int:
    """
    Choose the optimal fire-fighting task for a single agent.
    """

    # Parameters for scoring transformations
    distance_temp = 0.01  
    intensity_temp = 0.05 
    level_temp = 0.1  

    optimal_task = -1   
    highest_score = -np.inf  

    for task_index in range(len(fire_pos)):
        # Calculate distance from agent to fire task
        distance = np.sqrt((agent_pos[0] - fire_pos[task_index][0]) ** 2 +
                           (agent_pos[1] - fire_pos[task_index][1]) ** 2)

        # Calculate the normalized (0-1) scores
        distance_score = np.exp(-distance_temp * distance)  
        intensity_score = np.exp(-intensity_temp * fire_intensities[task_index]) 
        level_score = np.exp(-level_temp * fire_levels[task_index])  
          
        # Combine scores with task priority weights
        total_score = (distance_score + intensity_score + level_score) * fire_putout_weight[task_index]

        # Select the task with the highest total score
        if total_score > highest_score:
            highest_score = total_score
            optimal_task = task_index

    return optimal_task
```
This agent policy function evaluates each available fire suppression task based on its distance from the agent, the intensity of the fire, the fire level, and a predefined priority weight. It takes into account the position of the agent, fire suppression capability, available suppressant resources, positions of other agents, fire locations, current fire intensity levels, base difficulty of extinguishing each fire, and priority weights for task selection. The function selects the task that maximizes a composite score calculated from these parameters, prioritizing tasks that are close by, of high importance, and within the agent's current capabilities to manage effectively.